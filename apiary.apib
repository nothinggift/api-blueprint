FORMAT: 1A
HOST: http://api.gpcph.com/

# 旅游api

为方便使用和更新，文档使用在线方式编写，因为软件收费限制，文档为开放式浏览，所以文档地址不能外传

api采用restful规范架构，使用oauth2授权协议。具体说明可查询相关文档，这里只做简要使用说明。

## URL规则

假设用户资源命名为user，则可用下面的url来进行相关操作，注意 *users* 和 *user* 的区别

- **GET** `/users` 或 `/user/index` 获取用户列表
- **GET** `/users/123` 或 `/user/view?id=123` 获取用户id为123的用户
- **POST** `/users` 或 `/user/create` 创建一个用户
- **PATCH** 或 **PUT** `/users/123` 或 `user/update?id=123` 更新一个用户
- **DELETE** `/users/123` 或 `user/delete?id=123` 删除一个用户

除上述常用命令外，还有
**OPTIONS** 用来显示可用的操作
**HEAD** 类似于 **GET**，但只获取简要信息

文档里所有的示例url都采用前者书写

## api请求响应状态

api请求响应状态同样使用标准规范，以http状态码进行分辨

- `200` 正常响应，没有错误
- `201` 服务器创建资源成功，并在HEAD里的Location里返回资源地址url。例如：`POST /users` 创建用户，返回201状态码代表创建成功，并返回url `/users/123`
- `204` 操作成功，返回内容为空。例如：删除用户成功会返回204。
- `400` 请求失败，会同时返回响应错误信息
- `401` 权限验证失败，如用户未登录，应跳转到登录页登录
- `403` 用户没有访问对应资源的权限
- `404` 页面未找到
- `405` 错误的请求方式。例如GET请求使用了POST
- `422` 数据验证失败，会返回对应的错误属性和原因
- `429` 访问次数过多
- `500` 服务器内部错误

## 用户授权

用户访问授权api需要经过三个步骤

1. 用户访问登录页面，并输入手机号，请求 *发送验证码*。
2. 使用用户手机号以及验证码请求 *用户登录*，获取`access_token`和`refresh_token`，用户使用`access_token`访问授权api。
3. 当用户的 `access_token` 过期时，使用`refresh_token`请求刷新授权码api来获取新的`access_token`。


## 使用授权token访问api

非开放api在直接访问时，会返回 `401`错误，这时应携带授权token进行访问

token有两种传递方式，一种是使用GET或POST直接传递，第二种是使用header里的Authorization参数进行传递

**本api只使用header方式接收参数**

具体传递方法为在api请求的header里添加Authorization参数，然后设置其值为Bearer token。

*即：Bearer(字符串) +  (一个空格) + token值(字符串)*

<a name="search"></a>
## 数据搜索

部分信息列表支持搜索功能，例如搜索名称为`石家庄`的地区：

`http://域名.com/regions?name=石家庄`

格式为：*属性=值&属性=值*，可以进行搜索的属性都会列在api的`Parameters`里,所有属性都是可选项。

数据搜索都会使用分页，默认为显示第1页，单页20条，可以设置如下属性进行修改：

+ page 页数
+ per-page 每页条数

搜索数据时可以使用数据排序功能，例如：

`sort=id,-created_at`

代表按照id从小到大进行排序，按照创建时间从大到小进行排序。排序条件使用英文逗号分隔，逆向排序在属性名前连接一个英文减号。

一个完整的搜索示例：

`http://域名.com/regions?full_name=北京&per-page=100&sort=updated_at`

代表搜索北京下的所有地区，每页显示100条，按照更新时间进行排列


## expand数据

部分资源含有expand数据，即关联数据。

例如用户所在的城市与城市数据关联，要获取用户所在的城市信息时，通过url传参 `expand=region` 即可获得地区数据。

多个关联使用逗号分隔 `expand=expand1,expand2` 


```js
{
    "id":3,
    "username": "test112",
    ...
    "region":{
        "full_name":"北京市 西城区",
        "code":110102,
    }
}
```

## 422错误状态处理

当在更新和创建数据时，如果数据校验错误就会报出422错误

例如：性别sex，可接收值为0:男,1:女，传递值为3；用户名应传递一个不重复的字符串，传递值出现了重复。服务器会返回422错误，并返回如下数据。


```js
{
    {
        "field":"sex"
        "message":"性别应为男性或女性",
    },
    {
        "field":"username"
        "message":"用户名已被占用",
    }
    ...
}
```

`field`指出错的字段名，`message`为返回的出错信息，该信息可直接显示给用户。
多个字段出错，会在该数组中同时返回多条信息。

当接收到出错信息时，应定位到表单的出错字段位置，并显示相关错误信息。

## 用户授权 [/oauth]


###发送验证码 [POST /v1/public/sms-verification]

调用该api，用户将收到一条含有验证码的短信，app端无法获取到该验证码
    
+ Request (application/json)
    + Attributes
        + phone:18612345678 (string) - 11位数字手机号码
    
+ Response 204


+ Response 422 (application/json)

        [
            {
                "field": "phone",
                "message": "无效的手机号"
            }
        ]
        

### 用户登录 [POST /oauth2/token]

将用户收到的验证码与用户手机号通过该接口进行验证，验证通过获得token

请求使用的 `client_id` 和 `client_secret` 需到[网站后台](http://backend.gpcph.com/oauth-clients/index)进行添加。

*验证规则：用户在15分钟内收到的验证码都可以通过验证，但一个验证码只能通过一次验证*


+ Request (application/json)
    + Attributes
        + grant_type:password (string) -授权方式，固定为password
        + username:18612345678 (string) -11位手机号码
        + password:1234 (string) -用户手机收到的短信验证码
        + client_id:testclient (string) -用来区分不同的请求源id
        + client_secret:testpass (string) -与clientid配对的密码

+ Response 200 (application/json)

    + Attributes (object)
        + access_token:fc00fc2d7adc76df18cbabd91140ca525fbe7db0 (string) -用户授权码
        + expires_in:86400 (number) -授权码可用时间，单位秒
        + token_type:Bearer (string) -授权码传递方式
        + scope:null (string) -授权码使用范围
        + refresh_token:2998aa7128f8deb3ddb526d91b2b8766a2036d8d (string) -授权刷新码

+ Response 401 (application/json)

    用户的手机号与验证码未通过验证
    
    + Body
    
            {
                "name": "Unauthorized",
                "message": "Invalid username and password combination",
                "code": 0,
                "status": 401,
                "type": "filsh\\yii2\\oauth2server\\exceptions\\HttpException"
            }


### 获取新的授权码 [POST /oauth2/token]

用户授权码只有一天的有效期，当授权码过期时使用刷新码来直接获取新的授权码，不需要用户来重新执行登录操作

+ Request (application/json)
    + Attributes
        + `grant_type`:`refresh_token` (string) -授权方式，固定为refresh\_token
        + refresh_token:2998aa7128f8deb3ddb526d91b2b8766a2036d8d (string) -刷新授权码
        + client_id:testclient (string) -用来区分不同的请求源id
        + client_secret:testpass (string) -与clientid配对的密码

+ Response 200 (application/json)

    + Attributes
        + access_token:fc00fc2d7adc76df18cbabd91140ca525fbe7db0 (string) -用户授权码
        + expires_in:86400 (number) -授权码可用时间，单位秒
        + token_type:Bearer (string) -授权码传递方式
        + scope:`null` (string) -授权码使用范围
        + refresh_token:2998aa7128f8deb3ddb526d91b2b8766a2036d8d (string) -授权刷新码
        
+ Response 400 (application/json)

    refresh_token 错误或已过期

    + Body
    
            {
                "name": "Bad Request",
                "message": "The client credentials are invalid",
                "code": 0,
                "status": 400,
                "type": "filsh\\yii2\\oauth2server\\exceptions\\HttpException"
            }
    
        
# 用户 [/v1/users]

- expand
    - [region](#region)  根据region_code获取的关联数据
    - [serviceProvider](#service_provider)  获取用户地导信息

+ Model

    + Headers
        
            Authorization: Bearer 68792e2f8f03cf63a20839bd51736fe475444f92
    
+ Attributes
    + id:1 (number) -用户id
    + phone:18612345678 (number) -用户手机
    + username:昵称 (string) -用户昵称
    + portrait:`/pic/h2ba9205na9g7205nn30z.jpg` (string) -用户头像uri
    + sex:1 (number) -用户性别(0:男性;1:女性)
    + birthday:`1998-10-17` (string) -用户生日
    + email:28576920@qq.com (string) -用户邮箱
    + profile (string) -用户简介
    + region_code:`110102` (string) -所在城市code
    + status:10 (number) -用户状态
    + created_at (number) -用户注册时间
    + updated_at (number) -用户信息最后更新时间
    + `is_service_provider` (number) -用户是否为服务者(0:否,1:审核中;2:是)
        


## 获取用户自身信息 [GET /v1/user/self]

+ Request (application/json)
    
    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 200 (application/json)

        {
          "id": 3,
          "username": null,
          "portrait": null,
          "sex": null,
          "birthday": null,
          "phone": "18612345678",
          "email": "",
          "profile":null,
          "region_code":null,
          "status": 10,
          "created_at": 1464059772,
          "updated_at": 1464070760,
          "is_service_provider":0
        }

## 获取一名用户信息 [GET /v1/users/{id}]

无法获取用户的私人信息

+ Parameters

    + id:1 (number) - 用户id.
    
+ Attributes
    + id:1 (number) -用户id
    + username:昵称 (string) -用户昵称
    + portrait:`/pic/h2ba9205na9g7205nn30z.jpg` (string) -用户头像uri
    + sex:1 (number) -用户性别(0:男性;1:女性)
    + birthday:`1998-10-17` (string) -用户生日
    + profile (string) -用户简介
    + region_code:`110102` (string) -所在城市code
    + status:10 (number) -用户状态
    
+ Request (application/json)
    
    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 200 (application/json)

        {
          "id": 3,
          "username": null,
          "portrait": null,
          "sex": null,
          "birthday": null,
          "profile":null,
          "region_code":null,
          "status": 10,
          "is_service_provider":0
        }

+ Response 404 (application/json)

    
## 更新一名用户信息 [PUT /v1/users/{id}]

+ Parameters

    + id:21 (number) - 用户id.
    
+ Attributes

    + username:昵称 (string) -用户昵称
    + email:28576920@qq.com (string) -用户邮箱
    + portrait:`/pic/h2ba9205na9g7205nn30z.jpg` (string) -用户头像uri
    + sex:1 (number) -用户性别(0:男性;1:女性)
    + birthday:`1998-10-17` (string) -用户生日
    + profile (string) -用户简介
    + region_code:`110102` (string) -所在城市code
    + status:10 (number) -用户状态

+ Request (application/json)

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
    
    + Body
    
            {
              "username": "昵称",
              "sex": 1
            }
    
+ Response 200 (application/json)

    更新成功，返回更新后信息
    
    + Body

            {
              "id": 3,
              "username": 昵称,
              "portrait": null,
              "sex": 1,
              "birthday": "2002-10-01",
              "phone": "18612345678",
              "email": "",
              "profile":null,
              "region_code":null,
              "status": 10,
              "created_at": 1464059772,
              "updated_at": 1464070760,
              "is_service_provider":0
            }
    
+ Response 403 (application/json)

    没有更改该用户信息的权限(非本人)
    
    + Body
    
            {
              "name": "Forbidden",
              "message": "没有权限修改该用户资料",
              "code": 0,
              "status": 403,
              "type": "yii\\web\\ForbiddenHttpException"
            }

+ Response 422 (application/json)
        
    更改的内容不符合规则
    
    + Body
    
            [
                {
                    "field": "sex",
                    "message": "Sex是无效的。"
                }
            ]
            
# 地导 [/v1/service-providers]
<a name="service_provider"></a>

+ Attributes(地导base)
    + `user_id`:1 (number) -用户id
    + `agreed_to_the_agreement`:1 (number) -同意服务协议
    + `review_status`:1 (number) -审核状态(0:审核中,1:审核通过,2:审核未通过）
    + `review_message`:`身份证号与证件不符` (string) -审核信息
    + `created_at`:`1464059772` (number) -申请时间
    + `updated_at`:`1464059772` (number) -更新时间
    
+ Model(application/json)

        {
          "real_name": "张三",
          "id_card_number": "18603265504",
          "service_region": 110102,
          "front_of_id_card": "/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg",
          "back_of_id_card": "/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg",
          "photo_of_holding_id_card": "/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg",
          "created_at": 1465183849,
          "updated_at": 1465183849,
          "user_id": 3,
          "id": 1,
        }
    

## 申请成为地导 [POST]

+ Request (application/json)
    
    + Attributes(地导base)
    
    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 201
    
    [地导][]
            
+ Response 422 (application/json)

## 更新身份认证信息 [PUT /v1/service-providers/{id}]

+ Parameters

    + id:21 (number) - 用户id.

+ Request (application/json)
    
    + Attributes(地导base)
    
    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 200
    
    [地导][]
            
+ Response 403 (application/json)

    用户更新其他用户的资料，或者用户申请已通过
    
    + Body
    
            {
              "name": "Forbidden",
              "message": "申请信息已通过，不能再做更改",
              "code": 0,
              "status": 403,
              "type": "yii\\web\\ForbiddenHttpException"
            }
    

+ Response 422 (application/json)


## 查看身份认证信息 [GET /v1/service-providers/{id}]

+ Parameters

    + id:21 (number) - 用户id.
    
+ Request (application/json)

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200 
    
    [地导][]
    
+ Response 403 (application/json)

    用户查看其他用户资料
    
    + Body
    
            {
              "name": "Forbidden",
              "message": "只有用户本人可以进行该操作",
              "code": 0,
              "status": 403,
              "type": "yii\\web\\ForbiddenHttpException"
            }
            
## 删除身份认证信息 [DELETE /v1/service-providers/{id}]

**仅在开发阶段开放删除接口**

+ Parameters

    + id:21 (number) - 用户id.

+ Request (application/json)

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 204
            
            
# Data Structures

## 地导base (object)

+ `real_name`:`张三` (string) -真实姓名
+ `id_card_number`:`120103199104054373` (string) -身份证号
+ `service_region`:`110102` (number) -服务区域
+ `front_of_id_card`:`/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg ` (string) -身份证正面照片
+ `back_of_id_card`:`/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg ` (string) -身份证背面照片
+ `photo_of_holding_id_card`:`/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg` (string) -手持身份证照片


# 地导账户 [/v1/account]

+ Attributes
    + user_id (number) - 用户id
    + balance (number) - 账户余额
    + locked_balance (number) -被锁定的金额，该部分金额不能取现，不计入余额
    + status (number) -账户状态(0:正常)

## 获取地导账户信息 [GET /v1/account]



在用户发起申请之后，由管理人员在后台进行审核，当审核通过时，系统自动为地导创建相应账户。


    
+ Request (application/json)

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200
    
        {
          "user_id": 3,
          "balance": 0,
          "locked_balance": 0,
          "status": 0
        }
    
+ Response 404

# 地导服务 [/v1/service]

+ Attributes
    + id (number) - id
    + user_id (number) - 用户id
    + title (string) - 标题
    + service_region:`110000` (number) - 地区code
    + price (number) -每日服务价格
    + `max_number_of_services` (number) - 单次最高服务人数
    + detail (string) - 富文本的服务详情
    + score (number) -评分
    + status (number) - 状态（0:尚未提交审核过，没有能够上线的版本;1:在线状态;2:离线状态;3:被管理人员锁定）
    + review_status (number) - 审核状态（0:没有可以提交审核的版本,1:有更新的版本，但还没有提交审核;2:正在审核4:审核失败）
    + updated_at:1466394027 (number) - 更新时间
    + service_item (array) - 服务项目
    + service_scenic (array) - 服务景点
    
## 获取当前用户的地导服务 [GET /v1/service{?version,expand}]

服务的每次修改都会创建新的版本，使用版本号进行区分。
版本号设置值为 `head` 代表最新版本,设置为 `current` 代表目前上线的版本

+ Parameters
    + version:`head` (optional,string) - 指定服务的版本
        + members
            + `head`
            + `current`
            + 1
    + expand:`service_item,service_scenic` (optional,string) - 获取服务关联信息如：服务项目，服务景点,多个值之间使用逗号连接
        + members
            + `service_item`
            + `service_scenic`
            + `service_item,service_scenic`

+ Request

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200
    
            {
              "id": 1,
              "user_id": 3,
              "title": "服务标题",
              "service_region": "110000",
              "price": 150,
              "max_number_of_services": 3,
              "detail": "服务的具体信息富文本",
              "status": 1,
              "review_status": 2,
              "updated_at": 1466394027,
              "service_item": [
                {
                  "id": 3,
                  "type_id": 1,
                  "type_name": "接车",
                  "service_id": 1,
                  "service_direction": "北京车站或机场"
                }
              ],
              "service_scenic": [
                {
                  "id": 1,
                  "scenic_id": 342,
                  "scenic_name": "清昭陵",
                  "service_id": 1
                },
                {
                  "id": 3,
                  "scenic_id": 378,
                  "scenic_name": "旅顺蛇博物馆",
                  "service_id": 1
                }
              ]
            }

+ Response 404

## 更新服务主体内容 [PUT /v1/service]

+ Request (application/json)

    + Attributes
        + title (string) - 标题
        + service_region:`110000` (number) - 地区code
        + price (number) -每日服务价格
        + `max_number_of_services` (number) - 单次最高服务人数
        + detail (string) - 富文本的服务详情

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200
    
        {
              "id": 1,
              "user_id": 3,
              "title": "服务标题",
              "service_region": "110000",
              "price": 150,
              "max_number_of_services": 3,
              "detail": "服务的具体信息富文本",
              "status": 1,
              "review_status": 2,
              "updated_at": 1466394027
        }

## 将最新版本的服务提交审核 [GET /v1/service/send-to-review]

+ Request

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 204

+ Response 500

## 服务上线/下线 [GET /v1/service/switch/{type}]

+ Parameters

    + type (string) - 服务切换状态
        + members
            + `on`
            + `off`

+ Request

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 204

+ Response 400

+ Response 500

# 服务项目 [/v1/service-items]

+ Attributes
    + id:5 (number) -id
    + type_id:1 (number) - 服务类型id
    + type_name:`住宿` (string) -服务类型名称
    + service_id:`1` (number) - 服务id
    + service_direction (string) -服务描述


## 获取当前用户所有的服务项目 [GET /v1/service-items]

+ Request

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 200

            [
                {
                  "id": 3,
                  "type_id": 1,
                  "type_name": "接车",
                  "service_id": 1,
                  "service_direction": "北京车站或机场"
                }
            ]
            
## 获取当前用户的单个服务项目 [GET /v1/service-items/{id}]

+ Parameters

    + id:3 (number) - 服务项目id

+ Request

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200

            {
                "id": 3,
                "type_id": 1,
                "type_name": "接车",
                "service_id": 1,
                "service_direction": "北京车站或机场"
            }

## 更新当前用户的一个服务项目 [PUT /v1/service-items/{id}]

服务类型可以进行改动，但正常情境下使用不到，也最好不要使用。

+ Parameters

    + id:3 (number) - 服务项目id
    
+ Request (application/json)

    + Attributes
        + service_direction (string) -服务描述

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 200

            {
                "id": 3,
                "type_id": 1,
                "type_name": "接车",
                "service_id": 1,
                "service_direction": "北京车站或机场"
            }
            
## 为当前用户创建一个服务项目 [POST /v1/service-items]

+ Request (application/json)

    + Attributes
        + type_id (number) - 服务类型id
        + service_direction (string) -服务描述

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 201

            {
                "id": 5,
                "type_id": 1,
                "type_name": "接车",
                "service_id": 1,
                "service_direction": "北京车站或机场"
            }

## 删除一个当前用户的服务项目 [DELETE /v1/service-items/{id}]

+ Parameters

    + id:3 (number) - 服务项目id
    
+ Request (application/json)

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 204

# 服务景点 [/v1/service-scenics]

+ Attributes
    + id:5 (number) - 服务id
    + scenic_id:1 (number) - 景点id
    + scenic_name:`住宿` (string) -景点名称
    + service_id:`1` (number) - 服务id


## 获取当前用户所有的服务景点 [GET /v1/service-scenics]

+ Request

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 200

            [
                {
                  "id": 1,
                  "scenic_id": 342,
                  "scenic_name": "清昭陵",
                  "service_id": 1
                }
            ]
            
## 获取当前用户的单个服务景点 [GET /v1/service-scenics/{id}]

+ Parameters

    + id:3 (number) - 服务项目id

+ Request

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200

            {
              "id": 1,
              "scenic_id": 342,
              "scenic_name": "清昭陵",
              "service_id": 1
            }

## 为当前用户创建一个服务景点 [POST /v1/service-scenics]

+ Request (application/json)

    + Attributes
        + scenic_id:1 (number) - 景点id
        + service_id:`1` (number) - 服务id

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 201

            {
              "id": 1,
              "scenic_id": 342,
              "scenic_name": "清昭陵",
              "service_id": 1
            }

## 删除一个当前用户的服务景点 [DELETE /v1/service-scenics/{id}]

+ Parameters

    + id:3 (number) - 服务景点id
    
+ Request (application/json)

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 204

# 服务版本 [/v1/service-versions]

+ Attributes
    + id:5 (number) - 服务版本id
    + service_id (number) - 服务id
    + version:2 (number) - 版本号
    + status:1 (number) - 状态（0：正常状态;1:提交审核;2:审核通过;3:审核未通过;4:提交审核后在未审核前被新的提交覆盖）
    + created_at (number) - 创建时间
    + updated_at (number) - 更新时间
    + review_message (string) - 审核说明

## 搜索当前用户所有服务版本 [GET /v1/service-versions]

可以使用id，version,status，created\_at，updated\_at等条件进行搜索和排序

+ Request

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200
    
            [
              {
                "id": 6,
                "service_id": 1,
                "version": 2,
                "status": 0,
                "created_at": 1465869110,
                "updated_at": 1465869110,
                "review_message": null
              },
              {
                "id": 7,
                "service_id": 1,
                "version": 3,
                "status": 0,
                "created_at": 1465871721,
                "updated_at": 1465871721,
                "review_message": null
              }
            ]

## 根据id获取当前用户的一个服务版本 [GET /v1/service-versions/{id}]

+ Parameters

    + id:3 (number) - 服务版本id

+ Request

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200
    
            {
                "id": 6,
                "service_id": 1,
                "version": 2,
                "status": 0,
                "created_at": 1465869110,
                "updated_at": 1465869110,
                "review_message": null
            }


# 服务锁定日期 [/v1/locked-service-date{?beginDate,endDate,id}]

## 获取被锁定的日期 [GET]

该接口不需要身份验证，当提供身份验证并没有提供服务id时，将自动寻找用户本人的服务锁定日期。
当提供服务id时，将返回对应id的内容。

获取从开始日期到结束日期之间所有锁定的日期，如果没有设置结束日期，则获取从开始日期之后所有的锁定日期。

+ Parameters

    + beginDate:`1990-10-11` (date) - 开始日期
    + endDate:`2000-04-01` (optional,date) -结束日期
    + id (optional,number) -服务id
            
+ Response 200
    
        [
            "1991-12-03",
            "1992-05-10",
            ...
        ]

+ Response 400

## 锁定一个日期范围 [POST]

锁定从开始日期到结束日期之间所有的日期，如果没有设置结束日期，则只锁定开始日期当天。

日期间隔不得超过 **90** 天，否则会返回400错误

+ Parameters

    + beginDate:`1990-10-11` (date) - 开始日期
    + endDate:`2000-04-01` (optional,date) -结束日期
    
+ Request

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200
    
        {
            //本次操作实际锁定的天数
            "affected_rows": 0
        }

+ Response 400

## 解锁一个日期范围 [DELETE]

解锁从开始日期到结束日期之间所有的日期，如果没有设置结束日期，则只解锁开始日期当天。

日期间隔不得超过 **90** 天，否则会返回400错误

+ Parameters

    + beginDate:`1990-10-11` (date) - 开始日期
    + endDate:`2000-04-01` (optional,date) -结束日期
    
+ Request

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200
    
        {
            //本次操作实际解锁的天数
            "affected_rows": 0
        }

+ Response 400


# Group 开放api

<a name="region"></a>

## 地区 [/v1/region]

+ Model(application/json)

        {
          "id": 44,
          "name": "石家庄市",
          "full_name": "河北省 石家庄市",
          "pinyin": "ShiJiaZhuangShi",
          "acronym": "sjzs",
          "parent_id": 43,
          "code": "130100",
          "level":2,
          "is_city":1,
          "is_hot":0
        }
    
+ Attributes
    + id:5 (number) -地区id
    + name:崇文区 (string) -地区名称
    + full_name:北京市 崇文区 (string) -地区全称
    + pinyin:ChongWenQu (string) -地区拼音
    + acronym:cwq (string) -地区首拼
    + parent_id:1 (number) -父地区id
    + code:110103 (number) -地区标识
    + level:2 (number) -地区的层级，省为1
    + is_hot:1 (number) -是否热门城市 (0:否,1:是)
    + is_city:1 (number) -是否显示在城市列表(0:否,1:是)
    + children (array,optional) -子地区数组,如没有子地区则没有该属性
        + 
            + id:5 (number) -地区id
            + name:崇文区 (string) -地区名称
            + full_name:北京市 崇文区 (string) -地区全称
            + pinyin:ChongWenQu (string) -地区拼音
            + acronym:cwq (string) -地区首拼
            + parent_id:1 (number) -父地区id
            + code:110103 (number) -地区标识
            + level:2 (number) -地区的层级，省为1
        + 
            + id:5 (number) -地区id
            + name:崇文区 (string) -地区名称
            + full_name:北京市 崇文区 (string) -地区全称
            + pinyin:ChongWenQu (string) -地区拼音
            + acronym:cwq (string) -地区首拼
            + parent_id:1 (number) -父地区id
            + code:110103 (number) -地区标识
            + level:2 (number) -地区的层级，省为1
    
### 获取所有地区数据 [GET /v1/region/all{?type}]

+ Parameters

    + type (string,optional) - 地区数组结构.
        + default: tree
        + members
            + `tree`
            + `list`
            + `group-list`

+ Response 200 (application/json)
    
    树形数据结构
    
    + Body
    
            //树形数据结构
            [
                {
                    "id": "1",
                    "name": "北京市",
                    "full_name": "北京市",
                    "pinyin": "BeiJingShi",
                    "acronym": "bjs",
                    "parent_id": "0",
                    "code": "110000",
                    "level":1,
                    "is_city":1,
                    "is_hot":1,
                    "children": [
                        {
                            "id": "3",
                            "name": "东城区",
                            "full_name": "北京市 东城区",
                            "pinyin": "DongChengQu",
                            "acronym": "dcq",
                            "parent_id": "1",
                            "code": "110101",
                            "level":2,
                            "is_city":0,
                            "is_hot":0,
                        },
                        {
                            "id": "4",
                            "name": "西城区",
                            "full_name": "北京市 西城区",
                            "pinyin": "XiChengQu",
                            "acronym": "xcq",
                            "parent_id": "1",
                            "code": "110102",
                            "level":2,
                            "is_city":0,
                            "is_hot":0,
                        },
                        ...
                    ]
                }
                ...
            ]
            
            //列表型数据结构
            [
                {
                    "id": "1",
                    "name": "北京市",
                    "full_name": "北京市",
                    "pinyin": "BeiJingShi",
                    "acronym": "bjs",
                    "parent_id": "0",
                    "code": "110000",
                    "level":1,
                    "is_city":1,
                    "is_hot":1,
                },
                {
                    "id": "3",
                    "name": "东城区",
                    "full_name": "北京市 东城区",
                    "pinyin": "DongChengQu",
                    "acronym": "dcq",
                    "parent_id": "1",
                    "code": "110101"
                    "level":2,
                    "is_city":0,
                    "is_hot":0
                },
                {
                    "id": "4",
                    "name": "西城区",
                    "full_name": "北京市 西城区",
                    "pinyin": "XiChengQu",
                    "acronym": "xcq",
                    "parent_id": "1",
                    "code": "110102"
                    "level":2,
                    "is_city":0,
                    "is_hot":0
                },
                ...
            ]
            
            
+ Response 404 (application/json)


### 获取单个地区数据 [GET /v1/regions/{code}]

+ Parameters

    + code:1 (number) - 地区id或code.
    
+ Response 200

    [地区][]
    
+ Response 404 (application/json)

### 获取一个地区的父地区 [GET /v1/region/parent{?code}]

+ Parameters

    + code:1 (number) - 地区id或code.
    
+ Response 200

    [地区][]
    
+ Response 404 (application/json)

### 获取一个地区的子地区 [GET /v1/region/children{?code}]

+ Parameters

    + code:1 (number) - 地区id或code.
    
+ Response 200 (application/json)

        [
            {
                "id": "3",
                "name": "东城区",
                "full_name": "北京市 东城区",
                "pinyin": "DongChengQu",
                "acronym": "dcq",
                "parent_id": "1",
                "code": "110101",
                "level":2,
                "is_city":0,
                "is_hot":0
            },
            {
                "id": "4",
                "name": "西城区",
                "full_name": "北京市 西城区",
                "pinyin": "XiChengQu",
                "acronym": "xcq",
                "parent_id": "1",
                "code": "110102",
                "level":2,
                "is_city":0,
                "is_hot":0
            },
            ...
        ]
    
    
+ Response 404 (application/json)

### 搜索地区数据 [/v1/regions{?id,name,full_name,pinyin,acronym,parent_id,code,level,is_hot,is_city}]

#### 条件搜索 [GET]

根据地区的各种属性搜索相应的数据
    
具体的搜索定制信息参考 [数据搜索](#search)

+ Parameters
    + id (optional,number) ... 地区id
    + name (optional,string) ... 地区名称
    + full_name (optional,string) ... 带上级的全程
    + pinyin (optional,string) ... 拼音
    + acronym (optional,string) ... 首拼
    + parent_id (optional,number) ... 父地区id
    + code (optional,number) ... 地区代码
    + level (optional,number) ... 层级
    + is_hot (optional,number) ... 是否热门城市
    + is_city (optional,number) ... 是否显示在城市列表


+ Response 200 (application/json)
            
            [
                {
                    "id": "1",
                    "name": "北京市",
                    "full_name": "北京市",
                    "pinyin": "BeiJingShi",
                    "acronym": "bjs",
                    "parent_id": "0",
                    "code": "110000",
                    "level":1,
                    "is_city":1,
                    "is_hot":1
                },
                {
                    "id": "3",
                    "name": "东城区",
                    "full_name": "北京市 东城区",
                    "pinyin": "DongChengQu",
                    "acronym": "dcq",
                    "parent_id": "1",
                    "code": "110101"
                    "level":2,
                    "is_city":0,
                    "is_hot":0
                },
                {
                    "id": "4",
                    "name": "西城区",
                    "full_name": "北京市 西城区",
                    "pinyin": "XiChengQu",
                    "acronym": "xcq",
                    "parent_id": "1",
                    "code": "110102"
                    "level":2,
                    "is_city":0,
                    "is_hot":0tian
                },
                ...
            ]

## 银行 [/v1/goods]

+ Attributes
    + id:5 (number) -银行id
    + name:中国农业银行 (string) -银行名称
    + code (string) -银行支付代码，暂无用
    + icon (string) -银行图标

#### 搜索银行数据 [GET /v1/banks{?id,name,code}]

+ Attributes
    + id:5 (number) -银行id
    + name:中国农业银行 (string) -银行名称
    + code (string) -银行支付代码，暂无用

+ Parameters
    + id (optional,number) ... 银行id
    + name (optional,string) ... 银行名称
    + code (optional,number) ... 银行支付代码
    
+ Response 200 (application/json)
    
        [
            {
                "id": 1,
                "name": "中国农业银行",
                "code": null,
                "icon": "/images/2304be15-bd31-45ac-9aba-0cb20bab5ddc.jpeg",
            },
            {
                "id": 2,
                "name": "中国工商银行",
                "code": null,
                "icon": "/images/2304be15-bd31-45ac-9aba-0cb20bab5ddc.jpeg",
            }
        ]

#### 获取单个银行数据 [GET /v1/banks/{id}]

+ Parameters
    + id (optional,number) ... 银行id
    
+ Response 200 (application/json)
    
        {
            "id": 1,
            "name": "中国农业银行",
            "code": null,
            "icon": "/images/2304be15-bd31-45ac-9aba-0cb20bab5ddc.jpeg",
        },

+ Response 404 (application/json)

## 服务类型 [/v1/service-types{?id,name,is_hot,weight,parent_id,scenic_id,region_code}]

+ Attributes
    + id:5 (number) - 服务类型id
    + name:`接车` (string) -服务名称
    + direction (string) -服务类型说明
    + is_hot (number) -是否热门
    + weight (number) -权重
    + status (number) -状态（0:新增未审核;1:正常状态;2:被锁定）
    + parent_id (number) -父id

#### 搜索所有服务类型 [GET]

不再支持status参数，只有正常状态的类型才能被搜索。

+ Parameters
    + id (optional,number) ... 银行id
    + name (optional,string) ... 服务类型名称
    + is_hot (optional,number) ... 是否热门
    + weight (optional,number) ... 权重
    + parent_id (optional,number) ... 父id
    + scenic_id (optional,number) ... 根据景点获取服务，暂未实现
    + region_code (optional,number) ... 根据地区获取服务,暂未实现


+ Response 200 (application/json)

            [
              {
                "id": 2,
                "name": "接车",
                "direction": "用户到达接车地点后，将用户接送到住宿地点，需要写明接车地点和用户需要注意的事项。",
                "is_hot": 1,
                "weight": 0,
                "status": 0,
                "parent_id": 0
              },
              {
                "id": 3,
                "name": "住宿",
                "direction": "",
                "is_hot": 0,
                "weight": 0,
                "status": 0,
                "parent_id": 0
              }
            ]

#### 添加服务类型 [POST]

+ Request (application/json)

    + Attributes
        + name:`行车` (string) -服务名称

+ Response 201 (application/json)
    
            {
                "id": 2,
                "name": "行车",
                "status": 0,
            }
            
#### 根据名称查找服务类型 [GET /v1/service-type/find{?name}]

+ Parameters
    + name (string) ... 服务类型名称
    
+ Response 200 (application/json)

          {
            "id": 2,
            "name": "接车",
            "direction": "用户到达接车地点后，将用户接送到住宿地点，需要写明接车地点和用户需要注意的事项。",
            "is_hot": 1,
            "weight": 0,
            "status": 0,
            "parent_id": 0
          }
          
+ Response 404 (application/json)

## 景区 [/v1/scenics{?id,parent_id,name,region_code,introduction}]

+ Attributes
    + id (number) -景区id
    + name (string) -景区名称
    + region_code (number) -地区code
    + introduction (string) -景区介绍
    + phone (string) -景区联系方式
    + pricedesc (string) -景区门票说明
    + `recommend_visit_time` (string) -建议旅游时节说明
    + mark (string) -行车路线说明
    + bigpic (string) -景区封面图url
    + longpic (string) -景区方形封面图url
    + parent_id (number) -父景区id
    + weight (number) -权重,景区排序条件，数字越大排序越靠前

#### 搜索景区数据 [GET]

+ Parameters
    + id (optional,number) ... 景区id
    + name (optional,string) ... 景区名称
    + region_code (optional,number) ... 地区code
    + parent_id (optional,number) ... 父id
    + introduction (optional,string) ... 景区介绍

+ Response 200 (application/json)

            [
              {
                "id": 293,
                "region_code": 130303,
                "name": "山海关",
                "introduction": "山海关古城，古人称之为榆关，最早隶属于河北省临榆县，现在是秦皇岛市下属的一个行政区。\r\n因地处关内外的咽喉要塞，山海关自古便是兵家必争之地，具有一夫当关、万夫莫开的独特地理位置。它曾被著名诗人顾炎武赞为“两京锁钥无双地，万里长城第一关”。自明朝初年朱元璋派徐达修筑这里的长城以来，至今已有600多年的历史了。到了崇祯末年，镇守山海关的总兵吴三桂，从这里引清兵入关，才开始了清王朝近300年的统治。\r\n山海关是明长城的东北起点。它的城池高14米，厚7米，周长4公里。山海关全城一共有四座城门，拥有各种军事防御建筑，是一座防御体系比较完整的城关，有“天下第一关”之称。它以威武雄壮的“天下第一关”箭楼为主体，辅以靖边楼、临闾楼、牧营楼等多种长城建筑，向游客展示了中国古代的城防建筑风格。\r\n不仅如此，山海关还是一座文化古城。直至现在，这些明代的城墙建筑仍基本保存完好，主要街道和小巷也大都是按原样保留的，特别是城内众多的四合院民居，使得古城更加典雅古朴。\r\n山海关景区内最有代表性的景点就是关城东门，天下第一关城楼了。登上城楼，可俯视山海关全貌以及关外的茫茫原野，遥见角山长城的雄姿，浩瀚的大海也是朦胧可见。\r\n游客朋友，讲到这里您是不是已经迫不及待了，现在就让我们开始今天的旅程吧。不过在游览过程中一定要注意人身安全啊！",
                "phone": "0335-5051106",
                "pricedesc": "1、大联票90元 (包含第一关、兵部分司、钟鼓楼、大悲院、迎恩楼、王家大院、望洋楼)\r\n2、三景点联票70元(包含第一关、兵部分司、钟鼓楼)\r\n3、两景点联票65元(包含第一关、王家大院)",
                "recommend_visit_time": "5-10月最佳，此时天气凉爽，适宜登角山长城。 【夏】：山海关位于秦皇岛，夏季气候凉爽，是理想的避暑胜地。 【春秋】：是候鸟迁徙季节，是观鸟专项游的最佳时段。 【冬】：可赏山海关冬季的雪景，别有一番感受。",
                "mark": "出租车：\r\n秦皇岛市内的出租车价格比较低廉，起步价5元，是很不错的代步工具。 \r\n\r\n公交车：\r\n山海关距秦皇岛仅17公里，公共汽车班次很多，乘6路公交车可以从北戴河火车站直达秦皇岛火车站。山海关距北戴河30公里，两地间有公共汽车往返。可乘25路公交车，在山海关站下车即可。",
                "bigpic": "http://zy.yjly.com/v1/yjly/power/145440139074146.jpg",
                "longpic": "http://zy.yjly.com/v1/yjly/power/146053238579566.jpg",
                "parent_id": 0
              },
              {
                "id": 301,
                "region_code": 130304,
                "name": "鸽子窝公园",
                "introduction": "亲爱的游客朋友，欢迎您来到鸽子窝公园。\r\n鸽子窝公园位于北戴河区的东北部，紧挨着大海。公园的园名是由人称“军中才子”的原国防部部长张爱萍将军在1996年来景区参观游览时亲笔题写的。公园的面积不大，仅占地300余亩，但这300余亩的土地在全国乃至世界都小有名气。唐代文学家刘禹锡说到：“山不在高，有仙则名；水不在深，有龙则灵。”鸽子窝公园虽小，但也有自己的“制胜法宝”，并以此吸引着众多的游客朋友们从地球的各个角落赶来，一睹它的风采。\r\n公园里有一艘乘风破浪的大型景观船,这是为了体现北戴河地域文化，还有一个平静的小湖，我们给它取名叫做碣石湖，这是因为在公园东边靠海一侧有块儿经过史学家和地质学家考证的岩石而得名的，同时也由于这块岩石裂隙纵横，过去经常有野鸽子在岩石上停留栖息，所以我们公园就取名为“鸽子窝公园”了。   \r\n为了增添公园的娱乐性，还在小湖上增加了脚踏船，湖上垂钓等游乐设施，在碣石湖岸边有600株樱花树，形成了碧湖樱花的美景，现在鸽子窝公园成了鸟类的乐园，我们可以看到在公园中心广场，一批美国落地广场鸽在蓝天碧海家自由飞翔，在广场上，您还可以让这些象征纯洁和平的鸟儿在您的手心啄食，在您的手臂和肩膀上飞舞停留，这是一片多么祥和欢快的景象啊！\r\n    好了，话不多说，咱们这就开始本次的游览吧！",
                "phone": "0335-4041774",
                "pricedesc": "15元",
                "recommend_visit_time": "全年",
                "mark": "暂无",
                "bigpic": "http://yjly.bj.bcebos.com/yjly/Scenic/MDA4NjEzMDNQUDAwMjU=_620-348.jpg",
                "longpic": "http://zy.yjly.com/v1/yjly/power/145310564585885.jpg",
                "parent_id": 0
              }
            ]
            
#### 根据id获取一个景区 [GET /v1/scenics/{id}]

+ Parameters
    + id (optional,number) ... 景区id
    
+ Response 200 (application/json)

            {
                "id": 293,
                "region_code": 130303,
                "name": "山海关",
                "introduction": "山海关古城，古人称之为榆关，最早隶属于河北省临榆县，现在是秦皇岛市下属的一个行政区。\r\n因地处关内外的咽喉要塞，山海关自古便是兵家必争之地，具有一夫当关、万夫莫开的独特地理位置。它曾被著名诗人顾炎武赞为“两京锁钥无双地，万里长城第一关”。自明朝初年朱元璋派徐达修筑这里的长城以来，至今已有600多年的历史了。到了崇祯末年，镇守山海关的总兵吴三桂，从这里引清兵入关，才开始了清王朝近300年的统治。\r\n山海关是明长城的东北起点。它的城池高14米，厚7米，周长4公里。山海关全城一共有四座城门，拥有各种军事防御建筑，是一座防御体系比较完整的城关，有“天下第一关”之称。它以威武雄壮的“天下第一关”箭楼为主体，辅以靖边楼、临闾楼、牧营楼等多种长城建筑，向游客展示了中国古代的城防建筑风格。\r\n不仅如此，山海关还是一座文化古城。直至现在，这些明代的城墙建筑仍基本保存完好，主要街道和小巷也大都是按原样保留的，特别是城内众多的四合院民居，使得古城更加典雅古朴。\r\n山海关景区内最有代表性的景点就是关城东门，天下第一关城楼了。登上城楼，可俯视山海关全貌以及关外的茫茫原野，遥见角山长城的雄姿，浩瀚的大海也是朦胧可见。\r\n游客朋友，讲到这里您是不是已经迫不及待了，现在就让我们开始今天的旅程吧。不过在游览过程中一定要注意人身安全啊！",
                "phone": "0335-5051106",
                "pricedesc": "1、大联票90元 (包含第一关、兵部分司、钟鼓楼、大悲院、迎恩楼、王家大院、望洋楼)\r\n2、三景点联票70元(包含第一关、兵部分司、钟鼓楼)\r\n3、两景点联票65元(包含第一关、王家大院)",
                "recommend_visit_time": "5-10月最佳，此时天气凉爽，适宜登角山长城。 【夏】：山海关位于秦皇岛，夏季气候凉爽，是理想的避暑胜地。 【春秋】：是候鸟迁徙季节，是观鸟专项游的最佳时段。 【冬】：可赏山海关冬季的雪景，别有一番感受。",
                "mark": "出租车：\r\n秦皇岛市内的出租车价格比较低廉，起步价5元，是很不错的代步工具。 \r\n\r\n公交车：\r\n山海关距秦皇岛仅17公里，公共汽车班次很多，乘6路公交车可以从北戴河火车站直达秦皇岛火车站。山海关距北戴河30公里，两地间有公共汽车往返。可乘25路公交车，在山海关站下车即可。",
                "bigpic": "http://zy.yjly.com/v1/yjly/power/145440139074146.jpg",
                "longpic": "http://zy.yjly.com/v1/yjly/power/146053238579566.jpg",
                "parent_id": 0
            }

+ Response 404 (application/json)

#### 根据地区code查询附近景区 [GET /v1/scenic/find-by-region{?code}]

如果查询地区不是一个城市，就会查询该地区所属城市的所有景区并排在该地景区之后

+ Parameters
    + code (optional,number) ... 地区code
    
+ Response 200 (application/json)

            [
              {
                "id": 293,
                "region_code": 130303,
                "name": "山海关",
                "introduction": "山海关古城，古人称之为榆关，最早隶属于河北省临榆县，现在是秦皇岛市下属的一个行政区。\r\n因地处关内外的咽喉要塞，山海关自古便是兵家必争之地，具有一夫当关、万夫莫开的独特地理位置。它曾被著名诗人顾炎武赞为“两京锁钥无双地，万里长城第一关”。自明朝初年朱元璋派徐达修筑这里的长城以来，至今已有600多年的历史了。到了崇祯末年，镇守山海关的总兵吴三桂，从这里引清兵入关，才开始了清王朝近300年的统治。\r\n山海关是明长城的东北起点。它的城池高14米，厚7米，周长4公里。山海关全城一共有四座城门，拥有各种军事防御建筑，是一座防御体系比较完整的城关，有“天下第一关”之称。它以威武雄壮的“天下第一关”箭楼为主体，辅以靖边楼、临闾楼、牧营楼等多种长城建筑，向游客展示了中国古代的城防建筑风格。\r\n不仅如此，山海关还是一座文化古城。直至现在，这些明代的城墙建筑仍基本保存完好，主要街道和小巷也大都是按原样保留的，特别是城内众多的四合院民居，使得古城更加典雅古朴。\r\n山海关景区内最有代表性的景点就是关城东门，天下第一关城楼了。登上城楼，可俯视山海关全貌以及关外的茫茫原野，遥见角山长城的雄姿，浩瀚的大海也是朦胧可见。\r\n游客朋友，讲到这里您是不是已经迫不及待了，现在就让我们开始今天的旅程吧。不过在游览过程中一定要注意人身安全啊！",
                "phone": "0335-5051106",
                "pricedesc": "1、大联票90元 (包含第一关、兵部分司、钟鼓楼、大悲院、迎恩楼、王家大院、望洋楼)\r\n2、三景点联票70元(包含第一关、兵部分司、钟鼓楼)\r\n3、两景点联票65元(包含第一关、王家大院)",
                "recommend_visit_time": "5-10月最佳，此时天气凉爽，适宜登角山长城。 【夏】：山海关位于秦皇岛，夏季气候凉爽，是理想的避暑胜地。 【春秋】：是候鸟迁徙季节，是观鸟专项游的最佳时段。 【冬】：可赏山海关冬季的雪景，别有一番感受。",
                "mark": "出租车：\r\n秦皇岛市内的出租车价格比较低廉，起步价5元，是很不错的代步工具。 \r\n\r\n公交车：\r\n山海关距秦皇岛仅17公里，公共汽车班次很多，乘6路公交车可以从北戴河火车站直达秦皇岛火车站。山海关距北戴河30公里，两地间有公共汽车往返。可乘25路公交车，在山海关站下车即可。",
                "bigpic": "http://zy.yjly.com/v1/yjly/power/145440139074146.jpg",
                "longpic": "http://zy.yjly.com/v1/yjly/power/146053238579566.jpg",
                "parent_id": 0
              },
              {
                "id": 301,
                "region_code": 130304,
                "name": "鸽子窝公园",
                "introduction": "亲爱的游客朋友，欢迎您来到鸽子窝公园。\r\n鸽子窝公园位于北戴河区的东北部，紧挨着大海。公园的园名是由人称“军中才子”的原国防部部长张爱萍将军在1996年来景区参观游览时亲笔题写的。公园的面积不大，仅占地300余亩，但这300余亩的土地在全国乃至世界都小有名气。唐代文学家刘禹锡说到：“山不在高，有仙则名；水不在深，有龙则灵。”鸽子窝公园虽小，但也有自己的“制胜法宝”，并以此吸引着众多的游客朋友们从地球的各个角落赶来，一睹它的风采。\r\n公园里有一艘乘风破浪的大型景观船,这是为了体现北戴河地域文化，还有一个平静的小湖，我们给它取名叫做碣石湖，这是因为在公园东边靠海一侧有块儿经过史学家和地质学家考证的岩石而得名的，同时也由于这块岩石裂隙纵横，过去经常有野鸽子在岩石上停留栖息，所以我们公园就取名为“鸽子窝公园”了。   \r\n为了增添公园的娱乐性，还在小湖上增加了脚踏船，湖上垂钓等游乐设施，在碣石湖岸边有600株樱花树，形成了碧湖樱花的美景，现在鸽子窝公园成了鸟类的乐园，我们可以看到在公园中心广场，一批美国落地广场鸽在蓝天碧海家自由飞翔，在广场上，您还可以让这些象征纯洁和平的鸟儿在您的手心啄食，在您的手臂和肩膀上飞舞停留，这是一片多么祥和欢快的景象啊！\r\n    好了，话不多说，咱们这就开始本次的游览吧！",
                "phone": "0335-4041774",
                "pricedesc": "15元",
                "recommend_visit_time": "全年",
                "mark": "暂无",
                "bigpic": "http://yjly.bj.bcebos.com/yjly/Scenic/MDA4NjEzMDNQUDAwMjU=_620-348.jpg",
                "longpic": "http://zy.yjly.com/v1/yjly/power/145310564585885.jpg",
                "parent_id": 0
              }
            ]
            
## 专题文章 [/v1/articles{?id,title,status,weight,created_by,created_at,updated_at,on_homepage}]

+ Attributes
    + id (number) -文章id
    + title (string) -文章标题
    + cover (string) -文章封面uri
    + body (string) -文章内容，html格式
    + status (number) -文章状态(0:正常;1:热门;2:置顶;7:下线;]
    + weight (number) -权重，用来作为排序依据
    + created_by (number) -作者id
    + created_at (number) -创建时间
    + updated_at (number) -更新时间
    + on_homepage (number) -是否推送到首页轮播(0:否;1:是;)

#### 搜索专题文章 [GET]

因为专题文章的内容可能过长，所以在搜索时不会显示body字段

+ Parameters
    + id (optional,number) -文章id
    + title (optional,string) -文章标题
    + weight (optional,number) -权重，用来作为排序依据
    + created_by (optional,number) -作者id
    + created_at (optional,number) -创建时间
    + updated_at (optional,number) -更新时间
    + on_homepage (optional,number) -是否推送到首页轮播(0:否;1:是;)
    + status (optional,number) -文章状态(0:正常;1:热门;2:置顶;7:下线;]

+ Response 200 (application/json)
    
            [
              {
                "id": 1,
                "title": "这是一篇测试文章",
                "cover": "/images/b79ff084-c264-42ac-8692-acb8b50c8e23.jpeg",
                "status": 0,
                "created_by": 40,
                "created_at": 1466996147,
                "updated_at": 1466996336,
                "weight": 0,
                "on_homepage": 1
              }
            ]
            
            
#### 根据文章id获取文章内容 [GET /v1/articles/{id}]

+ Parameters
    + id (number) -文章id
    
+ Response 200 (application/json)
    
            {
                "id": 1,
                "title": "这是一篇测试文章",
                "cover": "/images/b79ff084-c264-42ac-8692-acb8b50c8e23.jpeg",
                "body": "..."
                "status": 0,
                "created_by": 40,
                "created_at": 1466996147,
                "updated_at": 1466996336,
                "weight": 0,
                "on_homepage": 1
            }
            
+ Response 404 (application/json)

## 搜索服务 [/v1/search/service{?username,title,service_item,service_scenic,begin_date,end_date,region_code,min_price,max_price}]

#### 根据条件搜索 [GET]

当按照服务时间进行搜索时， `begin_date` 与`end_date` 必须同时存在，该搜索条件才能成立

+ Parameters
    + username (optional,string) -服务提供者昵称
    + title (optional,string) -服务标题
    + service_item:`1,-3` (optional,string) - 需要提供的服务项目id，可筛选多个，id前带-号代表筛选不需要该服务项目的服务
    + service_scenic (optional,number) -景点id
    + begin_date:`2016-10-18` (optional,date) -可提供服务的开始时间,必须大于当日日期
    + end_date:`2016-10-20` (optional,date) -可提供服务的结束时间，必须大于开始时间
    + region_code (optional,number) -地区代号
    + min_price (optional,number) - 最低价格
    + max_price (optional,number) - 最高价格
    
+ Response 200 (application/json)
    
    
        [
            {
              "id": 1,
              "user_id": 6,
              "username": "昵称",
              "portrait": "/images/1f50c1a0-dcf1-47d3-9a7d-07d6db39950f.jpg",
              "title": "标题",
              "service_region": "530000",
              "region_name": "云南省",
              "region_full_name": "云南省",
              "price": 300,
              "max_number_of_services": 3,
              "detail": "详情",
              "score": 3.5,
              "status": 1,
              "review_status": 0,
              "updated_at": 1467784142,
              "service_item": [
                {
                  "type_id": 2,
                  "type_name": "住宿",
                  "service_direction": "旅店"
                },
                ...
              ],
              "service_scenic": [
                {
                  "scenic_id": 90665,
                  "scenic_name": "彦吉嘎庙"
                },
                ...
              ]
            },
            {
              "id": 2,
              "user_id": 8,
              "username": "昵称",
              "portrait": "/images/1f50c1a0-dcf1-47d3-9a7d-07d6db39950f.jpg",
              "title": "标题",
              "service_region": "530000",
              "region_name": "云南省",
              "region_full_name": "云南省",
              "price": 300,
              "max_number_of_services": 3,
              "detail": "详情",
              "score": 3.5,
              "status": 1,
              "review_status": 0,
              "updated_at": 1467784142,
              "service_item": [
                {
                  "type_id": 2,
                  "type_name": "住宿",
                  "service_direction": "旅店"
                },
                ...
              ],
              "service_scenic": [
                {
                  "scenic_id": 90665,
                  "scenic_name": "彦吉嘎庙"
                },
                ...
              ]
            },
        ]

#### 根据id搜索单个服务 [GET /v1/search/service/{id}]

+ Parameters
    + id (number) -服务id

+ Response 200 (application/json)
    
        {
          "id": 1,
          "user_id": 6,
          "username": "昵称",
          "portrait": "/images/1f50c1a0-dcf1-47d3-9a7d-07d6db39950f.jpg",
          "title": "标题",
          "service_region": "530000",
          "region_name": "云南省",
          "region_full_name": "云南省",
          "price": 300,
          "max_number_of_services": 3,
          "detail": "详情",
          "score": 3.5,
          "status": 1,
          "review_status": 0,
          "updated_at": 1467784142,
          "service_item": [
            {
              "type_id": 2,
              "type_name": "住宿",
              "service_direction": "旅店"
            },
            ...
          ],
          "service_scenic": [
            {
              "scenic_id": 90665,
              "scenic_name": "彦吉嘎庙"
            },
            ...
          ]
        }

+ Response 404 (application/json)
FORMAT: 1A
HOST: http://api.gpcph.com/

# 旅游api

为方便使用和更新，文档使用在线方式编写，因为软件收费限制，文档为开放式浏览，所以文档地址不能外传

api采用restful规范架构，使用oauth2授权协议。具体说明可查询相关文档，这里只做简要使用说明。

## URL规则

假设用户资源命名为user，则可用下面的url来进行相关操作，注意 *users* 和 *user* 的区别

- **GET** `/users` 或 `/user/index` 获取用户列表
- **GET** `/users/123` 或 `/user/view?id=123` 获取用户id为123的用户
- **POST** `/users` 或 `/user/create` 创建一个用户
- **PATCH** 或 **PUT** `/users/123` 或 `user/update?id=123` 更新一个用户
- **DELETE** `/users/123` 或 `user/delete?id=123` 删除一个用户

除上述常用命令外，还有
**OPTIONS** 用来显示可用的操作
**HEAD** 类似于 **GET**，但只获取简要信息

文档里所有的示例url都采用前者书写

## api请求响应状态

api请求响应状态同样使用标准规范，以http状态码进行分辨

- `200` 正常响应，没有错误
- `201` 服务器创建资源成功，并在HEAD里的Location里返回资源地址url。例如：`POST /users` 创建用户，返回201状态码代表创建成功，并返回url `/users/123`
- `204` 操作成功，返回内容为空。例如：删除用户成功会返回204。
- `400` 请求失败，会同时返回响应错误信息
- `401` 权限验证失败，如用户未登录，应跳转到登录页登录
- `403` 用户没有访问对应资源的权限
- `404` 页面未找到
- `405` 错误的请求方式。例如GET请求使用了POST
- `422` 数据验证失败，会返回对应的错误属性和原因
- `429` 访问次数过多
- `500` 服务器内部错误

## 用户授权

用户访问授权api需要经过三个步骤

1. 用户访问登录页面，并输入手机号，请求 *发送验证码*。
2. 使用用户手机号以及验证码请求 *用户登录*，获取`access_token`和`refresh_token`，用户使用`access_token`访问授权api。
3. 当用户的 `access_token` 过期时，使用`refresh_token`请求刷新授权码api来获取新的`access_token`。


## 使用授权token访问api

非开放api在直接访问时，会返回 `401`错误，这时应携带授权token进行访问

token有两种传递方式，一种是使用GET或POST直接传递，第二种是使用header里的Authorization参数进行传递

**本api只使用header方式接收参数**

具体传递方法为在api请求的header里添加Authorization参数，然后设置其值为Bearer token。

*即：Bearer(字符串) +  (一个空格) + token值(字符串)*

<a name="search"></a>
## 数据搜索

部分信息列表支持搜索功能，例如搜索名称为`石家庄`的地区：

`http://域名.com/regions?name=石家庄`

格式为：*属性=值&属性=值*，可以进行搜索的属性都会列在api的`Parameters`里,所有属性都是可选项。

数据搜索都会使用分页，默认为显示第1页，单页20条，可以设置如下属性进行修改：

+ page 页数
+ per-pag 每页条数

搜索数据时可以使用数据排序功能，例如：

`sort=id,-created_at`

代表按照id从小到大进行排序，按照创建时间从大到小进行排序。排序条件使用英文逗号分隔，逆向排序在属性名前连接一个英文减号。

一个完整的搜索示例：

`http://域名.com/regions?full_name=北京&per-page=100&sort=updated_at`

代表搜索北京下的所有地区，每页显示100条，按照更新时间进行排列


## expand数据

部分资源含有expand数据，即关联数据。

例如用户所在的城市与城市数据关联，要获取用户所在的城市信息时，通过url传参 `expand=region` 即可获得地区数据。

多个关联使用逗号分隔 `expand=expand1,expand2` 


```js
{
    "id":3,
    "username": "test112",
    ...
    "region":{
        "full_name":"北京市 西城区",
        "code":110102,
    }
}
```

## 422错误状态处理

当在更新和创建数据时，如果数据校验错误就会报出422错误

例如：性别sex，可接收值为0:男,1:女，传递值为3；用户名应传递一个不重复的字符串，传递值出现了重复。服务器会返回422错误，并返回如下数据。


```js
{
    {
        "field":"sex"
        "message":"性别应为男性或女性",
    },
    {
        "field":"username"
        "message":"用户名已被占用",
    }
    ...
}
```

`field`指出错的字段名，`message`为返回的出错信息，该信息可直接显示给用户。
多个字段出错，会在该数组中同时返回多条信息。

当接收到出错信息时，应定位到表单的出错字段位置，并显示相关错误信息。

## 用户授权 [/oauth]


###发送验证码 [POST /v1/public/sms-verification]

调用该api，用户将收到一条含有验证码的短信，app端无法获取到该验证码
    
+ Request (application/json)
    + Attributes
        + phone:18612345678 (string) - 11位数字手机号码
    
+ Response 204


+ Response 422 (application/json)

        [
            {
                "field": "phone",
                "message": "无效的手机号"
            }
        ]
        

### 用户登录 [POST /oauth2/token]

将用户收到的验证码与用户手机号通过该接口进行验证，验证通过获得token

请求使用的 `client_id` 和 `client_secret` 需到[网站后台](http://backend.gpcph.com/oauth-clients/index)进行添加。

*验证规则：用户在15分钟内收到的验证码都可以通过验证，但一个验证码只能通过一次验证*


+ Request (application/json)
    + Attributes
        + grant_type:password (string) -授权方式，固定为password
        + username:18612345678 (string) -11位手机号码
        + password:1234 (string) -用户手机收到的短信验证码
        + client_id:testclient (string) -用来区分不同的请求源id
        + client_secret:testpass (string) -与clientid配对的密码

+ Response 200 (application/json)

    + Attributes (object)
        + access_token:fc00fc2d7adc76df18cbabd91140ca525fbe7db0 (string) -用户授权码
        + expires_in:86400 (number) -授权码可用时间，单位秒
        + token_type:Bearer (string) -授权码传递方式
        + scope:null (string) -授权码使用范围
        + refresh_token:2998aa7128f8deb3ddb526d91b2b8766a2036d8d (string) -授权刷新码

+ Response 401 (application/json)

    用户的手机号与验证码未通过验证
    
    + Body
    
            {
                "name": "Unauthorized",
                "message": "Invalid username and password combination",
                "code": 0,
                "status": 401,
                "type": "filsh\\yii2\\oauth2server\\exceptions\\HttpException"
            }


### 获取新的授权码 [POST /oauth2/token]

用户授权码只有一天的有效期，当授权码过期时使用刷新码来直接获取新的授权码，不需要用户来重新执行登录操作

+ Request (application/json)
    + Attributes
        + `grant_type`:`refresh_token` (string) -授权方式，固定为refresh\_token
        + refresh_token:2998aa7128f8deb3ddb526d91b2b8766a2036d8d (string) -刷新授权码
        + client_id:testclient (string) -用来区分不同的请求源id
        + client_secret:testpass (string) -与clientid配对的密码

+ Response 200 (application/json)

    + Attributes
        + access_token:fc00fc2d7adc76df18cbabd91140ca525fbe7db0 (string) -用户授权码
        + expires_in:86400 (number) -授权码可用时间，单位秒
        + token_type:Bearer (string) -授权码传递方式
        + scope:`null` (string) -授权码使用范围
        + refresh_token:2998aa7128f8deb3ddb526d91b2b8766a2036d8d (string) -授权刷新码
        
+ Response 400 (application/json)

    refresh_token 错误或已过期

    + Body
    
            {
                "name": "Bad Request",
                "message": "The client credentials are invalid",
                "code": 0,
                "status": 400,
                "type": "filsh\\yii2\\oauth2server\\exceptions\\HttpException"
            }
    
        
# 用户 [/v1/users]

- expand
    - [region](#region)  根据region_code获取的关联数据
    - [service_provider](#service_provider)  获取用户地导信息

+ Model

    + Headers
        
            Authorization: Bearer 68792e2f8f03cf63a20839bd51736fe475444f92
    
+ Attributes
    + id:1 (number) -用户id
    + phone:18612345678 (number) -用户手机
    + username:昵称 (string) -用户昵称
    + portrait:`/pic/h2ba9205na9g7205nn30z.jpg` (string) -用户头像uri
    + sex:1 (number) -用户性别(0:男性;1:女性)
    + birthday:`1998-10-17` (string) -用户生日
    + email:28576920@qq.com (string) -用户邮箱
    + profile (string) -用户简介
    + region_code:`110102` (string) -所在城市code
    + status:10 (number) -用户状态
    + created_at (number) -用户注册时间
    + updated_at (number) -用户信息最后更新时间
    + `is_service_provider` (number) -用户是否为服务者(0:否,1:审核中;2:是)
        


## 获取用户自身信息 [GET /v1/user/self]

+ Request (application/json)
    
    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 200 (application/json)

        {
          "id": 3,
          "username": null,
          "portrait": null,
          "sex": null,
          "birthday": null,
          "phone": "18612345678",
          "email": "",
          "profile":null,
          "region_code":null,
          "status": 10,
          "created_at": 1464059772,
          "updated_at": 1464070760,
          "is_service_provider":0
        }

## 获取一名用户信息 [GET /v1/users/{id}]

无法获取用户的私人信息

+ Parameters

    + id:1 (number) - 用户id.
    
+ Attributes
    + id:1 (number) -用户id
    + username:昵称 (string) -用户昵称
    + portrait:`/pic/h2ba9205na9g7205nn30z.jpg` (string) -用户头像uri
    + sex:1 (number) -用户性别(0:男性;1:女性)
    + birthday:`1998-10-17` (string) -用户生日
    + profile (string) -用户简介
    + region_code:`110102` (string) -所在城市code
    + status:10 (number) -用户状态
    
+ Request (application/json)
    
    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 200 (application/json)

        {
          "id": 3,
          "username": null,
          "portrait": null,
          "sex": null,
          "birthday": null,
          "profile":null,
          "region_code":null,
          "status": 10,
          "is_service_provider":0
        }

+ Response 404 (application/json)

    
## 更新一名用户信息 [PUT /v1/users/{id}]

+ Parameters

    + id:21 (number) - 用户id.
    
+ Attributes

    + username:昵称 (string) -用户昵称
    + email:28576920@qq.com (string) -用户邮箱
    + portrait:`/pic/h2ba9205na9g7205nn30z.jpg` (string) -用户头像uri
    + sex:1 (number) -用户性别(0:男性;1:女性)
    + birthday:`1998-10-17` (string) -用户生日
    + profile (string) -用户简介
    + region_code:`110102` (string) -所在城市code
    + status:10 (number) -用户状态

+ Request (application/json)

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
    
    + Body
    
            {
              "username": "昵称",
              "sex": 1
            }
    
+ Response 200 (application/json)

    更新成功，返回更新后信息
    
    + Body

            {
              "id": 3,
              "username": 昵称,
              "portrait": null,
              "sex": 1,
              "birthday": "2002-10-01",
              "phone": "18612345678",
              "email": "",
              "profile":null,
              "region_code":null,
              "status": 10,
              "created_at": 1464059772,
              "updated_at": 1464070760,
              "is_service_provider":0
            }
    
+ Response 403 (application/json)

    没有更改该用户信息的权限(非本人)
    
    + Body
    
            {
              "name": "Forbidden",
              "message": "没有权限修改该用户资料",
              "code": 0,
              "status": 403,
              "type": "yii\\web\\ForbiddenHttpException"
            }

+ Response 422 (application/json)
        
    更改的内容不符合规则
    
    + Body
    
            [
                {
                    "field": "sex",
                    "message": "Sex是无效的。"
                }
            ]
            
# 地导 [/v1/service-providers]
<a name="service_provider"></a>

+ Attributes(地导base)
    + `user_id`:1 (number) -用户id
    + `agreed_to_the_agreement`:1 (number) -同意服务协议
    + `review_status`:1 (number) -审核状态(0:审核中,1:审核通过,2:审核未通过）
    + `review_message`:`身份证号与证件不符` (string) -审核信息
    + `created_at`:`1464059772` (number) -申请时间
    + `updated_at`:`1464059772` (number) -更新时间
    
+ Model(application/json)

        {
          "real_name": "张三",
          "id_card_number": "18603265504",
          "service_region": 110102,
          "front_of_id_card": "/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg",
          "back_of_id_card": "/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg",
          "photo_of_holding_id_card": "/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg",
          "created_at": 1465183849,
          "updated_at": 1465183849,
          "user_id": 3,
          "id": 1,
        }
    

## 申请成为地导 [POST]

+ Request (application/json)
    
    + Attributes(地导base)
    
    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 201
    
    [地导][]
            
+ Response 422 (application/json)

## 更新身份认证信息 [PUT /v1/service-providers/{id}]

+ Parameters

    + id:21 (number) - 用户id.

+ Request (application/json)
    
    + Attributes(地导base)
    
    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178

+ Response 200
    
    [地导][]
            
+ Response 403 (application/json)

    用户更新其他用户的资料，或者用户申请已通过
    
    + Body
    
            {
              "name": "Forbidden",
              "message": "申请信息已通过，不能再做更改",
              "code": 0,
              "status": 403,
              "type": "yii\\web\\ForbiddenHttpException"
            }
    

+ Response 422 (application/json)


## 查看身份认证信息 [GET /v1/service-providers/{id}]

+ Parameters

    + id:21 (number) - 用户id.
    
+ Request (application/json)

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200 
    
    [地导][]
    
+ Response 403 (application/json)

    用户查看其他用户资料
    
    + Body
    
            {
              "name": "Forbidden",
              "message": "只有用户本人可以进行该操作",
              "code": 0,
              "status": 403,
              "type": "yii\\web\\ForbiddenHttpException"
            }
            
## 删除身份认证信息 [DELETE /v1/service-providers/{id}]

**仅在开发阶段开放删除接口**

+ Parameters

    + id:21 (number) - 用户id.

+ Request (application/json)

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 204
            
            
# Data Structures

## 地导base (object)

+ `real_name`:`张三` (string) -真实姓名
+ `id_card_number`:`120103199104054373` (string) -身份证号
+ `service_region`:`110102` (number) -服务区域
+ `front_of_id_card`:`/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg ` (string) -身份证正面照片
+ `back_of_id_card`:`/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg ` (string) -身份证背面照片
+ `photo_of_holding_id_card`:`/images/c9b9bdf4-df7f-4c18-bc3e-10f2c1b37027.jpg` (string) -手持身份证照片


# 地导账户 [/v1/account]

+ Attributes
    + user_id (number) - 用户id
    + balance (number) - 账户余额
    + locked_balance (number) -被锁定的金额，该部分金额不能取现，不计入余额
    + status (number) -账户状态(0:正常)

## 获取地导账户信息 [GET /v1/account]



在用户发起申请之后，由管理人员在后台进行审核，当审核通过时，系统自动为地导创建相应账户。


    
+ Request (application/json)

    + Headers
        
            Authorization: Bearer f64319dc8bec5bd0d750dbc47653c706a64b7178
            
+ Response 200
    
        {
          "user_id": 3,
          "balance": 0,
          "locked_balance": 0,
          "status": 0
        }
    
+ Response 404

# Group 开放api

<a name="region"></a>

## 地区 [/v1/region]

+ Model(application/json)

        {
          "id": 44,
          "name": "石家庄市",
          "full_name": "河北省 石家庄市",
          "pinyin": "ShiJiaZhuangShi",
          "acronym": "sjzs",
          "parent_id": 43,
          "code": "130100",
          "level":2,
          "is_city":1,
          "is_hot":0
        }
    
+ Attributes
    + id:5 (number) -地区id
    + name:崇文区 (string) -地区名称
    + full_name:北京市 崇文区 (string) -地区全称
    + pinyin:ChongWenQu (string) -地区拼音
    + acronym:cwq (string) -地区首拼
    + parent_id:1 (number) -父地区id
    + code:110103 (number) -地区标识
    + level:2 (number) -地区的层级，省为1
    + is_hot:1 (number) -是否热门城市 (0:否,1:是)
    + is_city:1 (number) -是否显示在城市列表(0:否,1:是)
    + children (array,optional) -子地区数组,如没有子地区则没有该属性
        + 
            + id:5 (number) -地区id
            + name:崇文区 (string) -地区名称
            + full_name:北京市 崇文区 (string) -地区全称
            + pinyin:ChongWenQu (string) -地区拼音
            + acronym:cwq (string) -地区首拼
            + parent_id:1 (number) -父地区id
            + code:110103 (number) -地区标识
            + level:2 (number) -地区的层级，省为1
        + 
            + id:5 (number) -地区id
            + name:崇文区 (string) -地区名称
            + full_name:北京市 崇文区 (string) -地区全称
            + pinyin:ChongWenQu (string) -地区拼音
            + acronym:cwq (string) -地区首拼
            + parent_id:1 (number) -父地区id
            + code:110103 (number) -地区标识
            + level:2 (number) -地区的层级，省为1
    
### 获取所有地区数据 [GET /v1/region/all{?type}]

+ Parameters

    + type (string,optional) - 地区数组结构.
        + default: tree
        + members
            + `tree`
            + `list`
            + `group-list`

+ Response 200 (application/json)
    
    树形数据结构
    
    + Body
    
            //树形数据结构
            [
                {
                    "id": "1",
                    "name": "北京市",
                    "full_name": "北京市",
                    "pinyin": "BeiJingShi",
                    "acronym": "bjs",
                    "parent_id": "0",
                    "code": "110000",
                    "level":1,
                    "is_city":1,
                    "is_hot":1,
                    "children": [
                        {
                            "id": "3",
                            "name": "东城区",
                            "full_name": "北京市 东城区",
                            "pinyin": "DongChengQu",
                            "acronym": "dcq",
                            "parent_id": "1",
                            "code": "110101",
                            "level":2,
                            "is_city":0,
                            "is_hot":0,
                        },
                        {
                            "id": "4",
                            "name": "西城区",
                            "full_name": "北京市 西城区",
                            "pinyin": "XiChengQu",
                            "acronym": "xcq",
                            "parent_id": "1",
                            "code": "110102",
                            "level":2,
                            "is_city":0,
                            "is_hot":0,
                        },
                        ...
                    ]
                }
                ...
            ]
            
            //列表型数据结构
            [
                {
                    "id": "1",
                    "name": "北京市",
                    "full_name": "北京市",
                    "pinyin": "BeiJingShi",
                    "acronym": "bjs",
                    "parent_id": "0",
                    "code": "110000",
                    "level":1,
                    "is_city":1,
                    "is_hot":1,
                },
                {
                    "id": "3",
                    "name": "东城区",
                    "full_name": "北京市 东城区",
                    "pinyin": "DongChengQu",
                    "acronym": "dcq",
                    "parent_id": "1",
                    "code": "110101"
                    "level":2,
                    "is_city":0,
                    "is_hot":0
                },
                {
                    "id": "4",
                    "name": "西城区",
                    "full_name": "北京市 西城区",
                    "pinyin": "XiChengQu",
                    "acronym": "xcq",
                    "parent_id": "1",
                    "code": "110102"
                    "level":2,
                    "is_city":0,
                    "is_hot":0
                },
                ...
            ]
            
            
+ Response 404 (application/json)


### 获取单个地区数据 [GET /v1/regions/{code}]

+ Parameters

    + code:1 (number) - 地区id或code.
    
+ Response 200

    [地区][]
    
+ Response 404 (application/json)

### 获取一个地区的父地区 [GET /v1/region/parent{?code}]

+ Parameters

    + code:1 (number) - 地区id或code.
    
+ Response 200

    [地区][]
    
+ Response 404 (application/json)

### 获取一个地区的子地区 [GET /v1/region/children{?code}]

+ Parameters

    + code:1 (number) - 地区id或code.
    
+ Response 200 (application/json)

        [
            {
                "id": "3",
                "name": "东城区",
                "full_name": "北京市 东城区",
                "pinyin": "DongChengQu",
                "acronym": "dcq",
                "parent_id": "1",
                "code": "110101",
                "level":2,
                "is_city":0,
                "is_hot":0
            },
            {
                "id": "4",
                "name": "西城区",
                "full_name": "北京市 西城区",
                "pinyin": "XiChengQu",
                "acronym": "xcq",
                "parent_id": "1",
                "code": "110102",
                "level":2,
                "is_city":0,
                "is_hot":0
            },
            ...
        ]
    
    
+ Response 404 (application/json)

### 搜索地区数据 [/v1/regions{?id,name,full_name,pinyin,acronym,parent_id,code,level,is_hot,is_city}]

#### 条件搜索 [GET]

根据地区的各种属性搜索相应的数据
    
具体的搜索定制信息参考 [数据搜索](#search)

+ Parameters
    + id (optional,number) ... 地区id
    + name (optional,string) ... 地区名称
    + full_name (optional,string) ... 带上级的全程
    + pinyin (optional,string) ... 拼音
    + acronym (optional,string) ... 首拼
    + parent_id (optional,number) ... 父地区id
    + code (optional,number) ... 地区代码
    + level (optional,number) ... 层级
    + is_hot (optional,number) ... 是否热门城市
    + is_city (optional,number) ... 是否显示在城市列表


+ Response 200 (application/json)
            
            [
                {
                    "id": "1",
                    "name": "北京市",
                    "full_name": "北京市",
                    "pinyin": "BeiJingShi",
                    "acronym": "bjs",
                    "parent_id": "0",
                    "code": "110000",
                    "level":1,
                    "is_city":1,
                    "is_hot":1
                },
                {
                    "id": "3",
                    "name": "东城区",
                    "full_name": "北京市 东城区",
                    "pinyin": "DongChengQu",
                    "acronym": "dcq",
                    "parent_id": "1",
                    "code": "110101"
                    "level":2,
                    "is_city":0,
                    "is_hot":0
                },
                {
                    "id": "4",
                    "name": "西城区",
                    "full_name": "北京市 西城区",
                    "pinyin": "XiChengQu",
                    "acronym": "xcq",
                    "parent_id": "1",
                    "code": "110102"
                    "level":2,
                    "is_city":0,
                    "is_hot":0tian
                },
                ...
            ]